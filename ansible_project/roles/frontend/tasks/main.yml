---
- name: Include vars.yml
  include_vars: vars/vars.yml

- name: Include AWS credentials
  include_vars:
    file: /home/ubuntu/internship/ansible_project/aws_creds.yml
    name: aws_creds

- name: Set AWS credentials
  set_fact:
    aws_access_key_id: "{{ aws_creds.aws_access_key }}"
    aws_secret_access_key: "{{ aws_creds.aws_secret_key }}"

- name: 1. Update apt cache
  apt:
    update_cache: yes

- name: 2. Install Nginx and AWS CLI
  apt:
    name: 
      - nginx
      - awscli
    state: present
    update_cache: yes

- name: 3. Create AWS credentials directory
  file:
    path: ~/.aws
    state: directory
    mode: '0700'

- name: 4. Create AWS credentials file
  template:
    src: credentials.j2
    dest: ~/.aws/credentials
    owner: ubuntu
    mode: '0600'

- name: 5. Remove default nginx configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: 6. Set dynamic IP addresses for backend and frontend
  set_fact:
    backend_ip: "{{ hostvars[groups['tag_Name_backend'][0]].ansible_host }}"
    frontend_ip: "{{ hostvars[groups['tag_Name_frontend'][0]].ansible_host }}"

- name: 7. Debug backend IP
  debug:
    msg: "Backend IP is {{ backend_ip }}"

- name: 8. Debug frontend IP
  debug:
    msg: "Frontend IP is {{ frontend_ip }}"

- name: 9. Deploy Nginx configuration
  template:
    src: "{{ playbook_dir }}/roles/frontend/templates/class_schedule.j2"
    dest: /etc/nginx/sites-available/class_schedule

- name: 10. Create symbolic link to enable site
  file:
    src: /etc/nginx/sites-available/class_schedule
    dest: /etc/nginx/sites-enabled/class_schedule
    state: link
  notify: Restart Nginx

- name: 11. Download frontend build artifacts from S3
  command: aws s3 cp s3://class-schedule-bucket/ /var/www/frontend/ --recursive
  ignore_errors: true

- name: 12. Set permissions for frontend build directory
  file:
    path: /var/www/frontend
    owner: ubuntu
    group: ubuntu
    mode: '0755'
    state: directory

- name: 13. Check if the frontend build directory exists
  stat:
    path: /var/www/frontend
  register: build_dir

- name: 14. Add file .env
  template:
    src: "{{ playbook_dir }}/roles/frontend/templates/.env.j2"
    dest: /var/www/frontend/.env
  notify: Restart Nginx

  