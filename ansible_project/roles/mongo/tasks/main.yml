---
- name: Include vars.yml
  include_vars: vars/vars.yml

- name: 1. Update apt cache
  apt:
    update_cache: yes

- name: 2. Check Ubuntu version
  command: lsb_release -rs
  register: ubuntu_version

- name: 3. Check if focal-security repository exists
  stat:
    path: /etc/apt/sources.list.d/focal-security.list
  register: focal_security_repo

- name: 4. Add focal-security repository
  shell: echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
  when: ubuntu_version.stdout == "22.04" and not focal_security_repo.stat.exists

- name: 5. Update apt cache after adding focal-security repository
  apt:
    update_cache: yes
  when: ubuntu_version.stdout == "22.04"

- name: 6. Install libssl1.1
  apt:
    name: libssl1.1
    state: present
  when: ubuntu_version.stdout == "22.04"

- name: 7. Installing dependencies
  package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - curl
    - gnupg
    - python3
    - python3-pip
  become: true

- name: 8. Install pymongo
  pip:
    name: pymongo

- name: 9. Check if MongoDB APT keyring exists
  stat:
    path: /usr/share/keyrings/mongo-key.gpg
  register: mongo_keyring_exists

- name: 10. Include database variables
  include_vars: vars/vars.yml

- name: 11. Debug MongoDB version
  debug:
    var: mongodb_version

- name: 11. Add MongoDB APT keyring
  shell: "curl -fsSL https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc | sudo gpg --dearmour -o /usr/share/keyrings/mongo-key.gpg"
  args:
    executable: /bin/bash
  when: not mongo_keyring_exists.stat.exists

- name: 12. Check if MongoDB repository exists
  stat:
    path: /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list
  register: mongo_repository_exists

- name: 13. Add MongoDB repository
  shell: sudo sh -c 'echo deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongo-key.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/{{ mongodb_version }} multiverse > /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list'
  args:
    executable: /bin/bash
  when: not mongo_repository_exists.stat.exists

- name: 14. Update apt cache
  apt:
    update_cache: yes

- name: 15. Install MongoDB packages
  apt:
    name: mongodb-org
    state: latest

- name: 16. Enable and start MongoDB service
  service:
    name: mongod
    state: started
    enabled: yes

- name: 17. Enable remote connections in MongoDB
  lineinfile:
    path: /etc/mongod.conf
    regexp: "^ *bindIp:.*"
    line: "  bindIp: 0.0.0.0"
    state: present
    backup: yes
  notify:
    - Restart MongoDB Service

- name: 18. Enable authentication in MongoDB
  lineinfile:
    path: /etc/mongod.conf
    line: "security:\n  authorization: enabled"
    insertafter: "^#security:"
    state: present
    backup: yes
  notify:
    - Restart MongoDB Service