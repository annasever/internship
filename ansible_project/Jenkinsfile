pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws_access_key_id') 
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/SCRUM-7.TF_Ansible_Jenkins']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-git-user', url: 'git@github.com:annasever/internship.git']])
            }
        }

        stage('Run Ansible Playbook with Vault') {
            steps {
                dir('ansible_project') {
                    withCredentials([string(credentialsId: 'vault_password', variable: 'VAULT_PASS')]) {
                        sh '''
                            ansible-playbook playbook.yml -i aws_ec2.yml --vault-password-file <(echo "$VAULT_PASS")
                        '''
                    }
                }
            }
        }

        stage('Extract Backend URL') {
            steps {
                dir('ansible_project') {
                    script {
                        def backendIp = sh(script: "ansible -i aws_ec2.yml -m debug -a 'msg={{ hostvars[groups['tag_Name_backend'][0]].ansible_host }}'", returnStdout: true).trim()
                        echo "Backend IP: ${backendIp}"
                        writeFile file: 'backend_ip.txt', text: backendIp
                    }
                }
            }
        }

        stage('Update Frontend .env Configuration') {
            steps {
                dir('ansible_project') {
                    script {
                        def backendIp = readFile('backend_ip.txt').trim()
                        sh """
                            sed -i 's|^REACT_APP_API_BASE_URL=.*|REACT_APP_API_BASE_URL="http://${backendIp}:8080"|' /var/www/frontend/.env
                        """
                    }
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                dir('ansible_project') {
                    script {
                        sh " ansible-playbook frontend-playbook.yml -i aws_ec2.yml --vault-password-file <(echo "$VAULT_PASS")"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Ansible playbook executed successfully, and frontend is updated with backend IP in .env file.'
        }
        failure {
            echo 'Ansible playbook execution failed.'
        }
    }
}
