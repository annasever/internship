pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id') 
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        ANSIBLE_SSH_PRIVATE_KEY_FILE = credentials('private-key') 
        PATH = "/usr/local/bin:/usr/bin:$PATH" 
    }

    tools {
        nodejs 'NodeJS_14'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/SCRUM-7.TF_Ansible_Jenkins']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-git', url: 'git@github.com:annasever/internship.git']])
            }
        }

        stage('Run Ansible Playbook with Vault') {
            steps {
                dir('ansible_project') {
                    withCredentials([string(credentialsId: 'vault_password', variable: 'VAULT_PASS')]) {
                        writeFile file: 'vault_password.txt', text: "${VAULT_PASS}"
                        sh '''
                            ansible-playbook playbook.yml -i aws_ec2.yml --vault-password-file vault_password.txt --private-key="$ANSIBLE_SSH_PRIVATE_KEY_FILE"
                        '''
                    }
                }
            }
        }

        stage('Extract Backend URL') {
            steps {
                dir('ansible_project') {
                    script {
                        def backendIp = sh(script: "ansible -i aws_ec2.yml -m debug -a \"msg={{ hostvars[groups['tag_Name_backend'][0]].ansible_host }}\" tag_Name_backend --vault-password-file vault_password.txt", returnStdout: true).trim()
                        echo "Backend IP: ${backendIp}"

                        backendIp =  backendIp.replaceAll(/.*"msg":\s+"([^"]+)".*/, '$1')
                        echo "Parsed Backend IP: ${backendIp}"
                        writeFile file: 'backend_ip.txt', text: backendIp
                    }
                }
            }
        }

        // NPM and Frontend Build Steps
        stage('Frontend - Install NPM and Build') {
            steps {
                dir('frontend') {
                    script {
                        def backendIp = readFile('../ansible_project/backend_ip.txt').trim()
                        echo "${backendIp}"


                         sh """
                            export REACT_APP_API_BASE_URL="http://${backendIp}:8080"
                            npm install
                            npm run build
                        """
                    }
                }
            }
        }


stage('Deploy Frontend') {
    steps {
        dir('ansible_project') {
            script {
                sh """
                    ansible -i aws_ec2.yml frontend -m copy -a "src=../frontend/build/ dest=/var/www/frontend/ owner=www-data group=www-data mode=0755"
                """

                sh '''
                    ansible-playbook frontend-playbook.yml -i aws_ec2.yml --vault-password-file vault_password.txt --private-key="$ANSIBLE_SSH_PRIVATE_KEY_FILE"
                '''
            }
        }
    }
}


    post {
        success {
            echo 'Ansible playbook executed successfully, and frontend is updated with backend IP.'
        }
        failure {
            echo 'Ansible playbook execution failed.'
        }
    }
}