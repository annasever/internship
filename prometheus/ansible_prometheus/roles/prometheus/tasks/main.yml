---

- name: 1. Update APT package cache
  apt:
    update_cache: yes

- name: 2. Creating prometheus user group
  group: name="{{groupId}}"
  become: true

- name: 3. Creating prometheus user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: 4. Install prometheus
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: 5. Copy prometheus file to bin
  copy:
    src: "/tmp/prometheus-{{ version }}.linux-amd64/prometheus"
    dest: "/usr/local/bin/prometheus"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: 0755

- name: 6. Delete prometheus tmp folder
  file:
    path: '/tmp/prometheus-{{ version }}.linux-amd64'
    state: absent

- name: 7. Creates directory
  file: 
    path: "/data/prometheus/"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0755

- name: 8. Creates directory
  file: 
    path: "/etc/prometheus/"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0755

- name: 9. Check if node_exporter is running
  uri:
    url: "http://{{ item }}:9100/metrics"
    method: GET
    status_code: 200
  register: node_exporter_status
  loop: "{{ groups['node_exporter'] }}"
  when: item is defined

- name: 10. Remove existing prometheus.conf.j2 if it exists
  file:
    path: /etc/prometheus/prometheus.conf
    state: absent

- name: 11. Add config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.conf

- name: 12. Add alert config file
  copy:
    src: "{{ role_path }}/files/alertrules.yml"
    dest: /etc/prometheus/alertrules.yml

- name: 13. Copy alertmanager configuration file
  copy:
    src: "{{ role_path }}/files/alertmanager.yml"
    dest: /etc/prometheus/alertmanager.yml

- name: 14. Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: Restart the Prometheus service

- name: 15. Start prometheus service
  service:
    name: prometheus
    state: started
    enabled: yes
  notify: Restart the Prometheus service

- name: 16. Restart the Prometheus service
  service:
    name: prometheus
    state: restarted